# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZiNMg_kq7mrheHtKZv1UJaZo4HHgGohl
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Titanic-Dataset2.csv')
print(df.info())
print(df.head())
print(df.describe())

print(df.isnull().sum())

df['Age'] = df.groupby(['Pclass', 'Sex'])['Age'].transform(lambda x: x.fillna(x.median()))

df['Has_Cabin'] = df['Cabin'].notnull().astype(int)
df.drop('Cabin', axis=1, inplace=True)

df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])

df['Fare'] = df.groupby('Pclass')['Fare'].transform(lambda x: x.fillna(x.median()))

from IPython import get_ipython
from IPython.display import display
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Titanic-Dataset2.csv')


print(df.info())
print(df.head())
print(df.describe())
print(df.isnull().sum())

df['Age'] = df.groupby(['Pclass', 'Sex'])['Age'].transform(lambda x: x.fillna(x.median()))

df['Has_Cabin'] = df['Cabin'].notnull().astype(int)
df.drop('Cabin', axis=1, inplace=True)


df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])


df['Fare'] = df.groupby('Pclass')['Fare'].transform(lambda x: x.fillna(x.median()))

from sklearn.preprocessing import LabelEncoder

label = LabelEncoder()
df['Sex'] = label.fit_transform(df['Sex'])
df['Embarked'] = label.fit_transform(df['Embarked'])

if 'Title' in df.columns:
    df['Title'] = label.fit_transform(df['Title'])
else:
    print("Warning: 'Title' column not found for Label Encoding.")

if 'AgeBin' in df.columns:
    df['AgeBin'] = label.fit_transform(df['AgeBin'])
else:
     print("Warning: 'AgeBin' column not found for Label Encoding.")

if 'FareBin' in df.columns:
    df['FareBin'] = label.fit_transform(df['FareBin'])
else:
    print("Warning: 'FareBin' column not found for Label Encoding.")


label = LabelEncoder()
df['Sex'] = label.fit_transform(df['Sex'])
df['Embarked'] = label.fit_transform(df['Embarked'])

columns_to_onehot = []
if 'Pclass' in df.columns:
    columns_to_onehot.append('Pclass')
if 'Title' in df.columns:
    columns_to_onehot.append('Title')
if 'AgeBin' in df.columns:
    columns_to_onehot.append('AgeBin')
if 'FareBin' in df.columns:
    columns_to_onehot.append('FareBin')

if columns_to_onehot:
    df = pd.get_dummies(df, columns=columns_to_onehot, drop_first=True)
else:
    print("Warning: No valid columns found for one-hot encoding.")

if 'Name' in df.columns:
    df = df.drop('Name', axis=1)
if 'Ticket' in df.columns:
    df = df.drop('Ticket', axis=1)

plt.figure(figsize=(12, 8))

sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Feature Correlation')
plt.show()

if 'Sex_1' in df.columns:
    plt.figure(figsize=(10, 6))
    sns.barplot(x='Sex_1', y='Survived', data=df)
    plt.title('Survival Rate by Gender')
    plt.show()
else:
    print("Warning: 'Sex_1' column not found for plotting. Ensure one-hot encoding created it.")

if 'Pclass_2' in df.columns:
    plt.figure(figsize=(10, 6))
    sns.barplot(x='Pclass_2', y='Survived', data=df)
    plt.title('Survival Rate by Class')
    plt.show()
else:
    print("Warning: 'Pclass_2' column not found for plotting. Ensure one-hot encoding created it correctly (check dummy variable names).")

X = df.drop('Survived', axis=1)
y = df['Survived']


from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)